# Generated by Django 3.2.21 on 2023-09-14 18:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('turma', models.CharField(max_length=100)),
                ('ano', models.IntegerField()),
                ('componente', models.CharField(max_length=100)),
                ('perfil', models.CharField(max_length=100)),
                ('carga_horaria', models.IntegerField(default=0)),
                ('periodo', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('data_nascimento', models.DateField()),
                ('rg', models.CharField(max_length=20)),
                ('filiacao', models.CharField(max_length=200)),
                ('naturalidade', models.CharField(max_length=100)),
                ('endereco', models.CharField(max_length=200)),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato (xx) xxxxx-xxxx', regex='^\\(\\d{2}\\) \\d{5}-\\d{4}$')])),
                ('email', models.EmailField(max_length=254)),
                ('matricula', models.CharField(max_length=20)),
                ('formacao_academica', models.CharField(max_length=200)),
                ('pis_pasep', models.CharField(max_length=20)),
                ('dados_bancarios', models.CharField(max_length=200)),
                ('avaliacao', models.CharField(blank=True, max_length=200, null=True)),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Servidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setor', models.CharField(choices=[('Direção', 'Direção'), ('Biblioteca', 'Biblioteca'), ('Sec Escolar', 'Sec Escolar'), ('NGTES', 'NGTES'), ('Equipe Técnica', 'Equipe Técnica'), ('Núcleo de TI', 'Núcleo de TI'), ('úcleo Pedagógico', 'Núcleo Pedagógico'), ('Núcleo de REsidências', 'Núcleo de Residências')], max_length=30)),
                ('nome', models.CharField(max_length=100)),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('data_nascimento', models.DateField()),
                ('rg', models.CharField(max_length=20)),
                ('filiacao', models.CharField(max_length=200)),
                ('naturalidade', models.CharField(max_length=100)),
                ('endereco', models.CharField(max_length=200)),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato (xx) xxxxx-xxxx', regex='^\\(\\d{2}\\) \\d{5}-\\d{4}$')])),
                ('email', models.EmailField(max_length=254)),
                ('matricula', models.CharField(max_length=20)),
                ('formacao_academica', models.CharField(max_length=200)),
                ('pis_pasep', models.CharField(max_length=20)),
                ('dados_bancarios', models.CharField(max_length=200)),
                ('avaliacao', models.CharField(blank=True, max_length=200, null=True)),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='ngtes.curso')),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('graduacao', 'Graduação'), ('especializacao', 'Especialização'), ('mestrado', 'Mestrado'), ('doutorado', 'Doutorado')], max_length=20)),
                ('arquivo', models.FileField(upload_to='documentos/')),
                ('servidor', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='ngtes.servidor')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'custom_user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='curso',
            name='docente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cursos', to='ngtes.docente'),
        ),
    ]
